"use client";
import './hero.scss';
import React from 'react';
import CalcMini from '../CalcMini/CalcMini';

type RoomType = 'living' | 'bedroom' | 'kitchen';
type CeilingType = 'matte' | 'glossy' | 'printed';
type LightingType = 'led' | 'spot' | 'chandelier';
type ColorType = 'white' | 'cream' | 'gray' | 'blue' | 'green';

const ROOM_PRESETS: Record<RoomType, { label: string; defaultArea: number; icon: string }> = {
  living: { label: '–ì–æ—Å—Ç–∏–Ω–∞—è', defaultArea: 24, icon: 'üõãÔ∏è' },
  bedroom: { label: '–°–ø–∞–ª—å–Ω—è', defaultArea: 18, icon: 'üõèÔ∏è' },
  kitchen: { label: '–ö—É—Ö–Ω—è', defaultArea: 12, icon: 'üç≥' },
};

// –§–æ—Ç–æ –∫–æ–º–Ω–∞—Ç (–¥–æ–±–∞–≤—å —Å–≤–æ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ public/images/rooms/...)
const ROOM_PHOTOS: Record<RoomType, string> = {
    living: '/images/rooms/living.jpg',
    bedroom: '/images/rooms/bedroom.jpg',
    kitchen: '/images/rooms/kitchen.jpg',
};

const BASE_RATE_PER_M2 = 400; // ‚ÇΩ/–º¬≤ –±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –¥–ª—è –º–∞—Ç–æ–≤–æ–≥–æ
const CEILING_MULTIPLIER: Record<CeilingType, number> = {
  matte: 1,
  glossy: 1.15,
  printed: 1.3,
};

const LIGHTING_ADD: Record<LightingType, number> = {
  led: 3000,
  spot: 2000,
  chandelier: 1500,
};

const COLOR_TO_HEX: Record<ColorType, string> = {
  white: '#ffffff',
  cream: '#fef7ed',
  gray: '#f1f5f9',
  blue: '#dbeafe',
  green: '#dcfce7',
};

function formatPriceRub(value: number): string {
  return new Intl.NumberFormat('ru-RU').format(Math.max(0, Math.round(value)));
}

function Hero() {
  const [room, setRoom] = React.useState<RoomType>('living');
  const [area, setArea] = React.useState<number>(ROOM_PRESETS['living'].defaultArea);
  const [ceilingType, setCeilingType] = React.useState<CeilingType>('matte');
  const [lighting, setLighting] = React.useState<LightingType>('led');
  const [color, setColor] = React.useState<ColorType>('white');

  React.useEffect(() => {
    setArea(ROOM_PRESETS[room].defaultArea);
  }, [room]);

  const estimatedPrice = React.useMemo(() => {
    const base = area * BASE_RATE_PER_M2 * CEILING_MULTIPLIER[ceilingType];
    const total = base + LIGHTING_ADD[lighting];
    return Math.round(total / 100) * 100;
  }, [area, ceilingType, lighting]);

  const roomVars = React.useMemo(() => {
    const hex = COLOR_TO_HEX[color];
    const lightIntensity = lighting === 'led' ? 0.7 : lighting === 'spot' ? 0.45 : 0.3;
    const vars: Record<string, string | number> = {
      '--color-base': hex,
      '--light-intensity': lightIntensity,
    };
    return vars as React.CSSProperties;
  }, [color, lighting]);

  // --- 3D —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ø–ª–∞–≤–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç —Å—Ü–µ–Ω—ã –º—ã—à—å—é/—Ç–∞—á–µ–º ---
  const roomRef = React.useRef<HTMLDivElement | null>(null);
  const stateRef = React.useRef({
    dragging: false,
    startX: 0,
    startY: 0,
    targetYaw: -8, // –º—è–≥—á–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç
    targetPitch: 10,
    yaw: -8,
    pitch: 10,
    raf: 0 as number | 0,
  });

  const setTransform = (yaw: number, pitch: number) => {
    if (!roomRef.current) return;
    roomRef.current.style.setProperty('--yaw', `${yaw}deg`);
    roomRef.current.style.setProperty('--pitch', `${pitch}deg`);
  };

  React.useEffect(() => {
    const animate = () => {
      const s = stateRef.current;
      // –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º (–∏–Ω–µ—Ä—Ü–∏—è)
      s.yaw += (s.targetYaw - s.yaw) * 0.08;
      s.pitch += (s.targetPitch - s.pitch) * 0.08;
      setTransform(s.yaw, s.pitch);
      s.raf = requestAnimationFrame(animate);
    };
    stateRef.current.raf = requestAnimationFrame(animate);
    return () => cancelAnimationFrame(stateRef.current.raf);
  }, []);

  const onPointerDown = (e: React.PointerEvent) => {
    const s = stateRef.current;
    s.dragging = true;
    s.startX = e.clientX;
    s.startY = e.clientY;
    (e.currentTarget as HTMLElement).setPointerCapture(e.pointerId);
  };

  const onPointerMove = (e: React.PointerEvent) => {
    const s = stateRef.current;
    if (!s.dragging) return;
    const dx = e.clientX - s.startX;
    const dy = e.clientY - s.startY;
    s.startX = e.clientX;
    s.startY = e.clientY;
    s.targetYaw += dx * 0.15;   // —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ Yaw
    s.targetPitch -= dy * 0.15; // —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ Pitch
    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–≥–ª–æ–≤ –¥–ª—è –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã
    s.targetPitch = Math.max(0, Math.min(25, s.targetPitch));
    s.targetYaw = Math.max(-20, Math.min(20, s.targetYaw));
  };

  const onPointerUp = (e: React.PointerEvent) => {
    const s = stateRef.current;
    s.dragging = false;
    (e.currentTarget as HTMLElement).releasePointerCapture(e.pointerId);
  };

  return (
    <section className="hero">
      {/* –ö—Ä—É—Ç–æ–π –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
      <div className="hero__bg">
        {/* –ë–æ–ª—å—à–∏–µ –ø–ª–∞–≤–∞—é—â–∏–µ —Å—Ñ–µ—Ä—ã */}
        <div className="hero__floating-orbs">
          <div className="hero__orb hero__orb--1"></div>
          <div className="hero__orb hero__orb--2"></div>
          <div className="hero__orb hero__orb--3"></div>
        </div>

        {/* –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã */}
        <div className="hero__shapes">
          <div className="hero__shape hero__shape--triangle"></div>
          <div className="hero__shape hero__shape--diamond"></div>
          <div className="hero__shape hero__shape--hexagon"></div>
        </div>

        {/* –ú–µ—Ä—Ü–∞—é—â–∏–µ –∑–≤–µ–∑–¥—ã */}
        <div className="hero__stars">
          <div className="hero__star hero__star--1"></div>
          <div className="hero__star hero__star--2"></div>
          <div className="hero__star hero__star--3"></div>
        </div>
      </div>

      <div className="container">
        <div className="hero__layout">
          {/* –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ */}
          <div className="hero__metrics">
            <div className="hero__metric-card">
              <div className="hero__metric-icon">üìà</div>
              <div className="hero__metric-content">
                <div className="hero__metric-number">2847</div>
                <div className="hero__metric-label">–£—Å—Ç–∞–Ω–æ–≤–æ–∫ –≤ 2024</div>
              </div>
              <div className="hero__metric-trend">+24%</div>
            </div>
            <div className="hero__metric-card">
              <div className="hero__metric-icon">‚≠ê</div>
              <div className="hero__metric-content">
                <div className="hero__metric-number">4.9</div>
                <div className="hero__metric-label">–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
              </div>
              <div className="hero__metric-trend">1200+ –æ—Ç–∑—ã–≤–æ–≤</div>
            </div>
            <div className="hero__metric-card">
              <div className="hero__metric-icon">‚ö°</div>
              <div className="hero__metric-content">
                <div className="hero__metric-number">3 —á–∞—Å–∞</div>
                <div className="hero__metric-label">–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏</div>
              </div>
              <div className="hero__metric-trend">–ë–µ–∑ –ø—ã–ª–∏</div>
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="hero__main-content">
            <div className="hero__left">
              <div className="hero__badge-group">
                <span className="hero__badge hero__badge--featured">üèÜ –õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞</span>
                <span className="hero__badge hero__badge--new">‚ú® –ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ 2024</span>
              </div>

              <h1 className="hero__title">
                <span className="hero__title-line">–ü–æ—Ç–æ–ª–∫–∏ –Ω–æ–≤–æ–≥–æ</span>
                <span className="hero__title-line hero__title-line--highlight">–ø–æ–∫–æ–ª–µ–Ω–∏—è</span>
                <span className="hero__title-sub">–ü—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏–µ –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è</span>
              </h1>

              <div className="hero__value-props">
                <div className="hero__value-prop">
                  <div className="hero__prop-number">01</div>
                  <div className="hero__prop-content">
                    <h3>–£–º–Ω—ã–µ –ø–æ—Ç–æ–ª–∫–∏</h3>
                    <p>–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è LED-–ø–æ–¥—Å–≤–µ—Ç–∫–∞ –∏ –∫–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª—å</p>
                  </div>
                </div>
                <div className="hero__value-prop">
                  <div className="hero__prop-number">02</div>
                  <div className="hero__prop-content">
                    <h3>–≠–∫–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å</h3>
                    <p>100% –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π</p>
                  </div>
                </div>
                <div className="hero__value-prop">
                  <div className="hero__prop-number">03</div>
                  <div className="hero__prop-content">
                    <h3>–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è</h3>
                    <p>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å</p>
                  </div>
                </div>
              </div>

              <div className="hero__action-zone">
                <div className="hero__cta-buttons">
                  <button className="hero__btn hero__btn--primary">
                    <span className="hero__btn-text">–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø—Ä–∏–º–µ—Ä–∫–∞</span>
                    <span className="hero__btn-icon">ü•Ω</span>
                  </button>
                  <button className="hero__btn hero__btn--secondary">
                    <span className="hero__btn-text">–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä</span>
                    <span className="hero__btn-icon">üìê</span>
                  </button>
                </div>

                <div className="hero__contact-card">
                  <div className="hero__contact-avatar">
                    <div className="hero__avatar-img">üë®‚Äçüíº</div>
                    <div className="hero__online-status"></div>
                  </div>
                  <div className="hero__contact-info">
                    <div className="hero__contact-name">–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤</div>
                    <div className="hero__contact-role">–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–æ—Ç–æ–ª–∫–∞–º</div>
                    <a href="tel:+79180000000" className="hero__contact-phone">
                      +7 (918) 000-00-00
                    </a>
                  </div>
                  <button className="hero__contact-btn">üí¨</button>
                </div>
              </div>
            </div>

            {/* –ú–∏–Ω–∏-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä */}
            <div className="hero__right">
              <CalcMini />
            </div>
          </div>

          {/* –ù–∏–∂–Ω–∏–π –±–ª–æ–∫ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ */}
          <div className="hero__advantages">
            <div className="hero__advantage">
              <div className="hero__advantage-icon">üöÄ</div>
              <div className="hero__advantage-text">
                <strong>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞ –¥–µ–Ω—å</strong>
                <span>–ë–µ–∑ —Ä–µ–º–æ–Ω—Ç–∞ –∏ –≥—Ä—è–∑–∏</span>
              </div>
            </div>
            <div className="hero__advantage">
              <div className="hero__advantage-icon">üõ°Ô∏è</div>
              <div className="hero__advantage-text">
                <strong>–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</strong>
                <span>25 –ª–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏</span>
              </div>
            </div>
            <div className="hero__advantage">
              <div className="hero__advantage-icon">üíé</div>
              <div className="hero__advantage-text">
                <strong>–ü—Ä–µ–º–∏—É–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã</strong>
                <span>–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –±—Ä–µ–Ω–¥—ã</span>
              </div>
            </div>
            <div className="hero__advantage">
              <div className="hero__advantage-icon">üéØ</div>
              <div className="hero__advantage-text">
                <strong>–¢–æ—á–Ω–∞—è —Ü–µ–Ω–∞</strong>
                <span>–ë–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –¥–æ–ø–ª–∞—Ç</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

export default Hero;