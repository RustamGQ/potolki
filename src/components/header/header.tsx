"use client";
import './header.scss';
import Link from 'next/link';
import React, { useEffect, useRef, useState } from 'react';

function Header() {
    const [isStuck, setIsStuck] = useState(false);
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const topRef = useRef<HTMLDivElement | null>(null);

    useEffect(() => {
        let ticking = false;

        const handleScroll = () => {
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    const scrolled = window.scrollY > 8;
                    setIsStuck(prev => (prev !== scrolled ? scrolled : prev));
                    ticking = false;
                });
                ticking = true;
            }
        };

        // Initialize state based on initial scroll
        handleScroll();

        window.addEventListener('scroll', handleScroll, { passive: true });
        return () => {
            window.removeEventListener('scroll', handleScroll);
        };
    }, []);

    useEffect(() => {
        const updateTopHeightVar = () => {
            const topEl = topRef.current;
            if (!topEl) return;
            const height = topEl.offsetHeight;
            // Apply to the header element to scope the spacing locally
            topEl.parentElement?.style.setProperty('--header-top-h', `${height}px`);
        };

        updateTopHeightVar();
        const ro = new ResizeObserver(updateTopHeightVar);
        if (topRef.current) ro.observe(topRef.current);
        window.addEventListener('resize', updateTopHeightVar);
        return () => {
            ro.disconnect();
            window.removeEventListener('resize', updateTopHeightVar);
        };
    }, []);

    return (
        <header className={`header ${isStuck ? 'header--stuck' : ''}`}>
            <div ref={topRef} className="header__top-fixed">
                <div className="container container-header">
                    <div className="header__top">
                    <Link href="/" className="header__top-logo">
                        <svg width="160" height="28" viewBox="0 0 160 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                            {/* –ò–∑—ã—Å–∫–∞–Ω–Ω—ã–µ –≤–æ–ª–Ω—ã */}
                            <path d="M1 20 Q11 10 19 15 T37 13 T49 17" stroke="url(#waveGradient)" strokeWidth="2.2" fill="none"/>
                            <path d="M1 22 Q11 13 19 18 T37 16 T49 19" stroke="url(#waveGradient2)" strokeWidth="1.4" fill="none" opacity="0.6"/>
                            
                            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —É–∑–æ—Ä—ã */}
                            <g opacity="0.4">
                                <path d="M7 6 L11 10 L7 13 L4 10 Z" stroke="#3b82f6" strokeWidth="0.4" fill="none"/>
                                <path d="M24 5 L27 9 L24 12 L21 9 Z" stroke="#60a5fa" strokeWidth="0.4" fill="none"/>
                                <path d="M42 6 L45 10 L42 13 L39 10 Z" stroke="#3b82f6" strokeWidth="0.4" fill="none"/>
                            </g>
                            
                            {/* –§–∏–ª–∏–≥—Ä–∞–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ */}
                            <circle cx="14" cy="14" r="1.4" fill="none" stroke="url(#circleGradient)" strokeWidth="0.7"/>
                            <circle cx="14" cy="14" r="0.4" fill="#3b82f6"/>
                            <circle cx="29" cy="16" r="1.2" fill="none" stroke="url(#circleGradient)" strokeWidth="0.6"/>
                            <circle cx="29" cy="16" r="0.3" fill="#60a5fa"/>
                            <circle cx="43" cy="15" r="1.3" fill="none" stroke="url(#circleGradient)" strokeWidth="0.7"/>
                            <circle cx="43" cy="15" r="0.35" fill="#3b82f6"/>
                            
                            {/* –ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ */}
                            <g>
                                {/* –¢–µ–Ω—å —Ç–µ–∫—Å—Ç–∞ */}
                                <text x="56" y="16" fontFamily="Inter, sans-serif" fontSize="14" fontWeight="800" fill="#1e293b" opacity="0.2">
                                    –ü–û–¢–û–õ–ö–ò
                                </text>
                                {/* –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
                                <text x="55" y="15" fontFamily="Inter, sans-serif" fontSize="14" fontWeight="800" fill="url(#textGradient)" letterSpacing="-0.2px">
                                    –ü–û–¢–û–õ–ö–ò
                                </text>
                                {/* –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ */}
                                <rect x="55" y="17" width="52" height="0.4" fill="url(#underlineGradient)"/>
                            </g>
                            
                            {/* –ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –ø–æ–¥—Ç–µ–∫—Å—Ç */}
                            <text x="55" y="24" fontFamily="Inter, sans-serif" fontSize="6.5" fontWeight="500" fill="#64748b" letterSpacing="2px">
                                PREMIUM INTERIORS
                            </text>
                            
                            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ç–µ–∫—Å—Ç–µ */}
                            <circle cx="108" cy="12" r="0.7" fill="#fbbf24"/>
                            <circle cx="111" cy="12" r="0.5" fill="#f59e0b"/>
                            
                            {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã */}
                            <defs>
                                <linearGradient id="waveGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" stopColor="#1e40af"/>
                                    <stop offset="50%" stopColor="#3b82f6"/>
                                    <stop offset="100%" stopColor="#60a5fa"/>
                                </linearGradient>
                                <linearGradient id="waveGradient2" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" stopColor="#60a5fa"/>
                                    <stop offset="100%" stopColor="#93c5fd"/>
                                </linearGradient>
                                <linearGradient id="textGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" stopColor="#1e40af"/>
                                    <stop offset="50%" stopColor="#3b82f6"/>
                                    <stop offset="100%" stopColor="#1e293b"/>
                                </linearGradient>
                                <linearGradient id="underlineGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" stopColor="transparent"/>
                                    <stop offset="20%" stopColor="#3b82f6"/>
                                    <stop offset="80%" stopColor="#3b82f6"/>
                                    <stop offset="100%" stopColor="transparent"/>
                                </linearGradient>
                                <linearGradient id="circleGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" stopColor="#3b82f6"/>
                                    <stop offset="100%" stopColor="#60a5fa"/>
                                </linearGradient>
                            </defs>
                        </svg>
                    </Link>
                    <nav className='header__top-nav'>
                        <ul className="header__top-menu">
                            <li className="header__top-item">
                                <Link href="/about" className="header__top-link">
                                    –û –∫–æ–º–ø–∞–Ω–∏–∏
                                </Link>
                            </li>
                            <li className="header__top-item">
                                <Link href="/services" className="header__top-link">
                                    –£—Å–ª—É–≥–∏
                                </Link>
                            </li>
                            <li className="header__top-item">
                                <Link href="/calculator" className="header__top-link">
                                    –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω
                                </Link>
                            </li>
                            <li className="header__top-item">
                                <a href="!#" className="header__top-link">
                                    –ö–æ–Ω—Ç–∞–∫—Ç—ã
                                </a>
                            </li>
                            <li className="header__top-item header__top-item--extra">
                                <a href="!#" className="header__top-link">
                                    –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã
                                </a>
                            </li>
                            <li className="header__top-item header__top-item--extra">
                                <a href="!#" className="header__top-link">
                                    –û—Ç–∑—ã–≤—ã
                                </a>
                            </li>
                            <li className="header__top-item header__top-item--extra">
                                <a href="!#" className="header__top-link">
                                    –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                                </a>
                            </li>
                        </ul>
                    </nav>
                    <p className="header__top-geo">
                    üìç –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É –∏ –æ–±–ª–∞—Å—Ç—å
                    </p>
                    <button
                        className={`header__burger ${isMobileMenuOpen ? 'is-open' : ''}`}
                        aria-label="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
                        aria-expanded={isMobileMenuOpen}
                        onClick={() => setIsMobileMenuOpen(v => !v)}
                    >
                        <span />
                        <span />
                        <span />
                    </button>
                    </div>
                </div>
            </div>
            {/* Mobile menu */}
            <div className={`header__mobile ${isMobileMenuOpen ? 'is-open' : ''}`} onClick={() => setIsMobileMenuOpen(false)}>
                <div className="header__mobile-panel" onClick={(e) => e.stopPropagation()}>
                    <ul className="header__mobile-list">
                        <li><Link href="/about" onClick={() => setIsMobileMenuOpen(false)}>–û –∫–æ–º–ø–∞–Ω–∏–∏</Link></li>
                        <li><Link href="/services" onClick={() => setIsMobileMenuOpen(false)}>–£—Å–ª—É–≥–∏</Link></li>
                        <li><Link href="/calculator" onClick={() => setIsMobileMenuOpen(false)}>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω</Link></li>
                        <li><a href="!#" onClick={() => setIsMobileMenuOpen(false)}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                        <li><a href="!#" onClick={() => setIsMobileMenuOpen(false)}>–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</a></li>
                        <li><a href="!#" onClick={() => setIsMobileMenuOpen(false)}>–û—Ç–∑—ã–≤—ã</a></li>
                        <li><a href="tel:+79180000000" className="header__mobile-call" onClick={() => setIsMobileMenuOpen(false)}>–ü–æ–∑–≤–æ–Ω–∏—Ç—å</a></li>
                    </ul>
                </div>
            </div>
            <div className="container">
                <div className="header__bottom">
                    <div className="header__bottom-left">
                    <div className="header__bottom-logo">
                    üìû
                    <div className="header__bottom-box">
                        <a href="tel:+79180000000" className="header__bottom-phone">+7 (918) 000-00-00</a>
                        <span className="header__bottom-consultation">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</span>
                    </div>
                    </div>
                        <p className="header__bottom-work">üïì –†–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 8:00 –¥–æ 22:00</p>
                    </div>
                    <div className="header__bottom-center">
                        <div className="header__bottom-wrapper">
                            <p className="header__bottom-title">500+</p>
                            <p className="header__bottom-text">–î–û–í–û–õ–¨–ù–´–• –ö–õ–ò–ï–ù–¢–û–í</p>
                        </div>
                        <div className="header__bottom-wrapper">
                            <p className="header__bottom-title">15 –ª–µ—Ç</p>
                            <p className="header__bottom-text">–ù–ê –†–´–ù–ö–ï</p>
                        </div>
                        <div className="header__bottom-wrapper">
                            <p className="header__bottom-title">3 –≥–æ–¥–∞</p>
                            <p className="header__bottom-text">–ì–ê–†–ê–ù–¢–ò–Ø</p>
                        </div>
                    </div>
                    <div className="header__bottom-right">
                        <div className="header__bottom-boxe">
                            <a href="!#" className="header__bottom-link header__bottom-link--bg">üì∑ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç</a>
                            <a href="!#" className="header__bottom-link header__bottom-link--border">‚≠ê –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</a>
                        </div>
                        <div className="header__bottom-boxe">
                            <p className="header__bottom-info">
                            ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
                            </p>
                            <p className="header__bottom-info">
                            üí∞ –ë–µ–∑ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </header>
    )
}

export default Header;